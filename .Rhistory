library(ShrinkBayes)
library(ShrinkBayes)
data(datsim)
#load("outputToyExample.Rdata")
#load("outputExampleScriptsCAGE_1K.Rdata")
#1500 rows (siRNAs), 8 samples, pi0 = 2/3
#datsim1 <- matrix(rnorm(8000,mean=0,sd=0.5),nrow=1000)
#meanvec <- matrix(rep(rnorm(500,0,1),4),nrow=500)
#datsim2 <- cbind(matrix(rnorm(2000,mean=0,sd=0.5),nrow=500),matrix(rnorm(2000,mean=0,sd=0.5),nrow=500) + meanvec)
#datsim <- rbind(datsim1,datsim2)
#Number of cpus to use in (parallel) computations
ncpus2use <- 2
#Covariates
group <- factor(c(rep("group1",4),c(rep("group2",4))))
r1 <- factor(rep(1:4,2))
r2 <- factor(c(1,1,2,2,2,2,3,3))
#Formula (as used by INLA)
form = y ~  1 + group + f(r1) + f(r2)
#Formula for null-model (as used by INLA)
form0 = y ~  1
shrinksimul <- ShrinkGauss(form=form, dat=datsim,shrinkfixed="group", ncpus=ncpus2use,maxiter=2,ntag=c(10),shrinkrandom="r1",shrinkaddrandom=c("r2"))
vignette("ShrinkBayes")
vignette("ShrinkBayes.pdf")
/ShrinkSeq
ShrinkSeq
?ShrinkSeq
setwd("C://VUData//Wurdinger")
#save(grWurd,grWurdcv,file="grWurd.Rdata")
load("grWurd.Rdata")
nfeat <- nrow(datamc)
ngr <- 10
npgr <- ceiling(nfeat/ngr)
library(GRridge)
cutoffs <- rev(seq(0,1,by=0.01))
rocridgeF <- roc(probs=grWurdcv[,2],true=grWurdcv[,1],cutoffs=cutoffs)
GRridge:::auc(rocridgeF)
rocgrridgeF <- roc(probs=grWurdcv[,3],true=grWurdcv[,1],cutoffs=cutoffs)
GRridge:::auc(rocgrridgeF)
rocgrridgeF <- roc(probs=grWurdcv[,4],true=grWurdcv[,1],cutoffs=cutoffs)
GRridge:::auc(rocgrridgeF)
rocgrridgeF <- roc(probs=grWurdcv[,5],true=grWurdcv[,1],cutoffs=cutoffs)
GRridge:::auc(rocgrridgeF)
rocgrridgeF <- roc(probs=grWurdcv[,6],true=grWurdcv[,1],cutoffs=cutoffs)
GRridge:::auc(rocgrridgeF)
pdf(file="C:\\Synchr\\EmpiricalBayes\\rocsWurd.pdf",width=7,height=7,paper="special")
pdf(file="C:\\Synchr\\EmpiricalBayes\\rocsWurd.pdf",width=7,height=7,paper="special")
pdf(file="C:\\Synchr\\Presentaties\\EmpiricalBayes\\rocsWurd.pdf",width=7,height=7,paper="special")
par(mar=c(2,2,1,1.5))
plot(rocridgeF[1,],rocridgeF[2,],type="l",lty=1,ann=F,lwd=2,col="red")
points(rocgrridgeF[1,],rocgrridgeF[2,],type="l",lty=1,lwd=2,col="green")
legend(0.61,0.14,legend=c("Unweighted,   AUC=0.76","Group-weighted, AUC=0.85"),
lwd=c(2,2),lty=c(1,1),col=c("green","red"))
dev.off()
pdf(file="C:\\Synchr\\Presentaties\\EmpiricalBayes\\rocsWurd.pdf",width=7,height=7,paper="special")
par(mar=c(2,2,1,1.5))
plot(rocridgeF[1,],rocridgeF[2,],type="l",lty=1,ann=F,lwd=2,col="red")
points(rocgrridgeF[1,],rocgrridgeF[2,],type="l",lty=1,lwd=2,col="green")
legend(0.55,0.12,legend=c("Unweighted,       AUC=0.76","Group-weighted, AUC=0.85"),
lwd=c(2,2),lty=c(1,1),col=c("green","red"))
dev.off()
pdf(file="C:\\Synchr\\Presentaties\\EmpiricalBayes\\rocsWurd.pdf",width=7,height=7,paper="special")
par(mar=c(2,2,1,1.5))
plot(rocridgeF[1,],rocridgeF[2,],type="l",lty=1,ann=F,lwd=2,col="red")
points(rocgrridgeF[1,],rocgrridgeF[2,],type="l",lty=1,lwd=2,col="green")
legend(0.55,0.12,legend=c("Unweighted,       AUC=0.76","Group-weighted, AUC=0.85"),
lwd=c(2,2),lty=c(1,1),col=c("green","red"))
dev.off()
pdf(file="C:\\Synchr\\Presentaties\\EmpiricalBayes\\rocsWurd.pdf",width=7,height=7,paper="special")
par(mar=c(2,2,1,1.5))
plot(rocridgeF[1,],rocridgeF[2,],type="l",lty=1,ann=F,lwd=2,col="red")
points(rocgrridgeF[1,],rocgrridgeF[2,],type="l",lty=1,lwd=2,col="green")
legend(0.55,0.11,legend=c("Unweighted,         AUC=0.76","Group-weighted, AUC=0.85"),
lwd=c(2,2),lty=c(1,1),col=c("green","red"))
dev.off()
pdf(file="C:\\Synchr\\Presentaties\\EmpiricalBayes\\rocsWurd.pdf",width=7,height=7,paper="special")
par(mar=c(2,2,1,1.5))
plot(rocridgeF[1,],rocridgeF[2,],type="l",lty=1,ann=F,lwd=2,col="red")
points(rocgrridgeF[1,],rocgrridgeF[2,],type="l",lty=1,lwd=2,col="green")
legend(0.55,0.10,legend=c("Unweighted,        AUC=0.76","Group-weighted, AUC=0.85"),
lwd=c(2,2),lty=c(1,1),col=c("green","red"))
dev.off()
pdf(file="C:\\Synchr\\Presentaties\\EmpiricalBayes\\rocsWurd.pdf",width=7,height=7,paper="special")
par(mar=c(2,2,1,1.5))
plot(rocridgeF[1,],rocridgeF[2,],type="l",lty=1,ann=F,lwd=2,col="red")
points(rocgrridgeF[1,],rocgrridgeF[2,],type="l",lty=1,lwd=2,col="green")
legend(0.55,0.10,legend=c("Unweighted,        AUC=0.76","Group-weighted, AUC=0.85"),
lwd=c(2,2),lty=c(1,1),col=c("green","red"))
dev.off()
pdf(file="C:\\Synchr\\Presentaties\\EmpiricalBayes\\rocsWurd.pdf",width=7,height=7,paper="special")
par(mar=c(2,2,1,1.5))
plot(rocridgeF[1,],rocridgeF[2,],type="l",lty=1,ann=F,lwd=2,col="red")
points(rocgrridgeF[1,],rocgrridgeF[2,],type="l",lty=1,lwd=2,col="green")
legend(0.55,0.10,legend=c("Unweighted,         AUC=0.76","Group-weighted, AUC=0.85"),
lwd=c(2,2),lty=c(1,1),col=c("green","red"))
dev.off()
pdf(file="C:\\Synchr\\Presentaties\\EmpiricalBayes\\rocsWurd.pdf",width=7,height=7,paper="special")
par(mar=c(2,2,1,1.5))
plot(rocridgeF[1,],rocridgeF[2,],type="l",lty=1,ann=F,lwd=2,col="red")
points(rocgrridgeF[1,],rocgrridgeF[2,],type="l",lty=1,lwd=2,col="green")
legend(0.55,0.10,legend=c("Group-weighted, AUC=0.85", "Unweighted,         AUC=0.76"),
lwd=c(2,2),lty=c(1,1),col=c("green","red"))
dev.off()
par(mfrow=c(1,2))
boxplot(grWurdcv[,3] ~ grWurdcv[,1])
boxplot(grWurdcv[,2] ~ grWurdcv[,1])
par(mfrow=c(1,2))
boxplot(grWurdcv[,3] ~ grWurdcv[,1],main="Group-weighted")
boxplot(grWurdcv[,2] ~ grWurdcv[,1])
par(mfrow=c(1,2))
boxplot(grWurdcv[,3] ~ grWurdcv[,1],main="Group-weighted")
boxplot(grWurdcv[,2] ~ grWurdcv[,1],main="Unweighted")
par(mar=c(2,2,1,1.5))
plot(rocridgeF[1,],rocridgeF[2,],type="l",lty=1,ann=F,lwd=2,col="red")
points(rocgrridgeF[1,],rocgrridgeF[2,],type="l",lty=1,lwd=2,col="green")
legend(0.55,0.10,legend=c("Group-weighted, AUC=0.85", "Unweighted,         AUC=0.76"),
lwd=c(2,2),lty=c(1,1),col=c("green","red"))
par(mar=c(2,2,1,1.5),mfrow=c(1,1))
plot(rocridgeF[1,],rocridgeF[2,],type="l",lty=1,ann=F,lwd=2,col="red")
points(rocgrridgeF[1,],rocgrridgeF[2,],type="l",lty=1,lwd=2,col="green")
legend(0.55,0.10,legend=c("Group-weighted, AUC=0.85", "Unweighted,         AUC=0.76"),
lwd=c(2,2),lty=c(1,1),col=c("green","red"))
par(mar=c(2,2,1,1.5),mfrow=c(1,1))
plot(rocridgeF[1,],rocridgeF[2,],type="l",lty=1,ann=F,lwd=2,col="red")
points(rocgrridgeF[1,],rocgrridgeF[2,],type="l",lty=1,lwd=2,col="green")
legend(0.6,0.10,legend=c("Group-weighted, AUC=0.85", "Unweighted,         AUC=0.76"),
lwd=c(2,2),lty=c(1,1),col=c("green","red"))
par(mar=c(2,2,1,1.5),mfrow=c(1,1))
plot(rocridgeF[1,],rocridgeF[2,],type="l",lty=1,ann=F,lwd=2,col="red")
points(rocgrridgeF[1,],rocgrridgeF[2,],type="l",lty=1,lwd=2,col="green")
legend(0.58,0.10,legend=c("Group-weighted, AUC=0.85", "Unweighted,         AUC=0.76"),
lwd=c(2,2),lty=c(1,1),col=c("green","red"))
par(mfrow=c(1,2))
boxplot(grWurdcv[,3] ~ grWurdcv[,1],main="Group-weighted")
boxplot(grWurdcv[,2] ~ grWurdcv[,1],main="Unweighted")
rename <- factor(as.character(grWurdcv[,1]),function(x) {if(x=="Pancreas") return "PC" else return x})
rename <- factor(sapply(as.character(grWurdcv[,1]),function(x) {if(x=="Pancreas") return "PC" else return x}))
rename <- factor(sapply(as.character(grWurdcv[,1]),function(x) {if(x=="Pancreas") return("PC") else return(x)}))
rename
par(mfrow=c(1,2))
boxplot(grWurdcv[,3] ~ rename,main="Group-weighted")
boxplot(grWurdcv[,2] ~ rename,main="Unweighted")
par(mfrow=c(1,2))
boxplot(grWurdcv[,3] ~ rename,main="Weighted")
boxplot(grWurdcv[,2] ~ rename,main="Unweighted")
par(mar=c(2,2,1,1.5),mfrow=c(1,1))
plot(rocridgeF[1,],rocridgeF[2,],type="l",lty=1,ann=F,lwd=2,col="red")
points(rocgrridgeF[1,],rocgrridgeF[2,],type="l",lty=1,lwd=2,col="green")
legend(0.58,0.10,legend=c("Weighted,   AUC=0.85", "Unweighted, AUC=0.76"),
lwd=c(2,2),lty=c(1,1),col=c("green","red"))
par(mar=c(2,2,1,1.5),mfrow=c(1,1))
plot(rocridgeF[1,],rocridgeF[2,],type="l",lty=1,ann=F,lwd=2,col="red")
points(rocgrridgeF[1,],rocgrridgeF[2,],type="l",lty=1,lwd=2,col="green")
legend(0.58,0.10,legend=c("Weighted,    AUC=0.85", "Unweighted, AUC=0.76"),
lwd=c(2,2),lty=c(1,1),col=c("green","red"))
par(mar=c(2,2,1,1.5),mfrow=c(1,1))
plot(rocridgeF[1,],rocridgeF[2,],type="l",lty=1,ann=F,lwd=2,col="red")
points(rocgrridgeF[1,],rocgrridgeF[2,],type="l",lty=1,lwd=2,col="green")
legend(0.58,0.10,legend=c("Weighted,     AUC=0.85", "Unweighted, AUC=0.76"),
lwd=c(2,2),lty=c(1,1),col=c("green","red"))
par(mar=c(2,2,1,1.5),mfrow=c(1,1))
plot(rocridgeF[1,],rocridgeF[2,],type="l",lty=1,ann=F,lwd=2,col="red")
points(rocgrridgeF[1,],rocgrridgeF[2,],type="l",lty=1,lwd=2,col="green")
legend(0.58,0.10,legend=c("Weighted,    AUC=0.85", "Unweighted, AUC=0.76"),
lwd=c(2,2),lty=c(1,1),col=c("green","red"))
grWurdcv[,2]
Accuracy(grWurdcv[,2],as.numeric(rename)-1)
Accuracy <- function(pred,truth){
return(mean(1-abs(pred-truth)))
}
Accuracy(grWurdcv[,2],as.numeric(rename)-1)
Accuracy(grWurdcv[,3],as.numeric(rename)-1)
ClassPred <- function(truth,probs,samplab,fold=10){
#truth <- as.numeric(grWurdcv$TrueResponse)-1;probs <- grWurdcv[,2];samplab <- grWurdcv$SampleNames;fold=10
classpred <- c()
samps <- unique(samplab)
prsort <- sort(probs)
thr <- (c(prsort,1) + c(0,prsort))/2
classif <- apply(as.matrix(thr,nrow=1),1,function(x) as.numeric(probs >= x))
nsam <- length(samps);
folds <- foldfunc(nsam,response=truth[1:nsam],outerfold=fold)
classpred <- rep(NA,nsam)
for(i in 1:fold)
{
#i<-1
samin <- samps[folds[[i]]]
whsam <- which(samplab %in% samin)
bestthri <- thr[which.min(apply(classif[-whsam,],2,function(x) mean(abs(truth[-whsam]-x))))]
classpredi <- sapply(samin,function(samname) {
whsam2 <- which(samplab[whsam]==samname)
return(mean(as.numeric(probs[whsam[whsam2]] >= bestthri)))
})
classpred[folds[[i]]] <- classpredi
}
return(classpred)
}
foldfunc <- function(nsam,response,outerfold=10,fixedfold=T){ #creates balanced folds
#nsam<-95;response<-(as.numeric(grWurdcv$TrueResponse)-1)[1:nsam]; outerfold=10
if(fixedfold) set.seed(3245623) else set.seed(NULL)
nev <- which(response==1)
nsamev <- length(nev)
randev<-sample(nev)
grs1 <- floor(nsamev/outerfold)
grs2 <- grs1+1
ngr1 <- outerfold*grs2 - nsamev
foldsev <- lapply(1:outerfold,function(xg) {
if(xg <= ngr1) els <- randev[(1+(xg-1)*grs1):(xg*grs1)] else els <- randev[(ngr1*grs1 + 1+(xg-ngr1-1)*grs2):(ngr1*grs1 + (xg-ngr1)*grs2)]
return(els)
}
)
nonev <- setdiff(1:nsam,nev)
nsamnonev <- length(nonev)
randnonev<-sample(nonev)
grs1 <- floor(nsamnonev/outerfold)
grs2 <- grs1+1
ngr1 <- outerfold*grs2 - nsamnonev
foldsnonev <- lapply(1:outerfold,function(xg) {
if(xg <= ngr1) els <- randnonev[(1+(xg-1)*grs1):(xg*grs1)] else els <- randnonev[(ngr1*grs1 + 1+(xg-ngr1-1)*grs2):(ngr1*grs1 + (xg-ngr1)*grs2)]
return(els)
}
)
folds <- lapply(1:outerfold,function(i) c(foldsev[[i]],foldsnonev[[i]]))
return(folds)
}
ClassPred <- function(truth,probs,samplab,fold=10){
#truth <- as.numeric(grWurdcv$TrueResponse)-1;probs <- grWurdcv[,2];samplab <- grWurdcv$SampleNames;fold=10
classpred <- c()
samps <- unique(samplab)
prsort <- sort(probs)
thr <- (c(prsort,1) + c(0,prsort))/2
classif <- apply(as.matrix(thr,nrow=1),1,function(x) as.numeric(probs >= x))
nsam <- length(samps);
folds <- foldfunc(nsam,response=truth[1:nsam],outerfold=fold)
classpred <- rep(NA,nsam)
for(i in 1:fold)
{
#i<-1
samin <- samps[folds[[i]]]
whsam <- which(samplab %in% samin)
bestthri <- thr[which.min(apply(classif[-whsam,],2,function(x) mean(abs(truth[-whsam]-x))))]
classpredi <- sapply(samin,function(samname) {
whsam2 <- which(samplab[whsam]==samname)
return(mean(as.numeric(probs[whsam[whsam2]] >= bestthri)))
})
classpred[folds[[i]]] <- classpredi
}
return(classpred)
}
Accuracy <- function(pred,truth){
return(mean(1-abs(pred-truth)))
}
wilct <- function(dat,cols,nrep,alternative="two.sided"){
#nrep=25;cols <- c(2,3);dat <- grWurdcv
nsam <- nrow(dat)/nrep
repe <- sort(rep(1:nrep,nsam))
nf <- max(dat$whichfold)
whrep <- dat$whichfold + nf*(repe-1)
fwilc <- function(fold){
#fold <- 12
wh <- which(whrep == fold)
x <- dat[wh,cols[1]];y<- dat[wh,cols[2]];true <- as.numeric(dat[wh,1])-1
res1 <- abs(x-true)
res2 <- abs(y-true)
wt <- wilcox.test(res1,res2,paired = TRUE,alternative=alternative)
wtp <- wt$p.value
if(is.na(wtp)) wtp <- 1
return(wtp)
}
res <- sapply(1:max(whrep),fwilc)
return(res)
}
ClassPred(grWurdcv[,2])
ClassPred(rename,grWurdcv[,2]),rename)
ClassPred(rename,grWurdcv[,2],rename)
ClassPred(rename,grWurdcv[,2],grWurdcv$SampleNames)
ClassPred(as.numeric(rename)-1,grWurdcv[,2],grWurdcv$SampleNames)
as.numeric(rename)-1
grWurdcv[,2]
grWurdcv$SampleNames
grWurdcv$
ClassPred(as.numeric(rename)-1,grWurdcv[,2],as.character(1:length(rename)))
CPgrridge <- ClassPred(as.numeric(rename)-1,grWurdcv[,3],as.character(1:length(rename)))
CPridge <- ClassPred(as.numeric(rename)-1,grWurdcv[,2],as.character(1:length(rename)))
CPgrridge <- ClassPred(as.numeric(rename)-1,grWurdcv[,3],as.character(1:length(rename)))
CPridge
CPgrridge
Accuracy(CPridge,as.numeric(rename)-1)
Accuracy(CPgrridge,as.numeric(rename)-1)
(30.3-19.8)/30.3
214.079 + 204.474
par(mar=c(2,2,1,1.5),mfrow=c(1,1))
plot(rocridgeF[1,],rocridgeF[2,],type="l",lty=1,ann=F,lwd=2,col="red")
points(rocgrridgeF[1,],rocgrridgeF[2,],type="l",lty=1,lwd=2,col="green")
legend(0.58,0.12,legend=c("Weighted,    AUC=0.85", "Unweighted, AUC=0.76"),
lwd=c(2,2),lty=c(1,1),col=c("green","red"))
par(mar=c(2,2,1,1.5),mfrow=c(1,1))
plot(rocridgeF[1,],rocridgeF[2,],type="l",lty=1,ann=F,lwd=2,col="red")
points(rocgrridgeF[1,],rocgrridgeF[2,],type="l",lty=1,lwd=2,col="green")
legend(0.62,0.10,legend=c("Weighted,    AUC=0.85", "Unweighted, AUC=0.76"),
lwd=c(2,2),lty=c(1,1),col=c("green","red"))
par(mar=c(2,2,1,1.5),mfrow=c(1,1))
plot(rocridgeF[1,],rocridgeF[2,],type="l",lty=1,ann=F,lwd=2,col="red")
points(rocgrridgeF[1,],rocgrridgeF[2,],type="l",lty=1,lwd=2,col="green")
legend(0.64,0.10,legend=c("Weighted,    AUC=0.85", "Unweighted, AUC=0.76"),
lwd=c(2,2),lty=c(1,1),col=c("green","red"))
